{"meta":{"title":"x:xs","subtitle":null,"description":null,"author":"jdkim","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"address of","slug":"address-of","date":"2017-01-27T12:56:31.000Z","updated":"2017-01-27T13:18:05.000Z","comments":true,"path":"2017/01/27/address-of/","link":"","permalink":"http://yoursite.com/2017/01/27/address-of/","excerpt":"","text":"의도&amp; 연산자를 오버로딩한 주소 찾기. 동기논쟁이 될 소지가 있는게, 주소를 얻지 못하게 하려는 의도가 있을 수도 있다.그럼에도 불구하고 언어에서는 가능하다. 12345678910111213class nonaddressable &#123;public: typedef double useless_type;private: useless_type operator&amp;() const;&#125;;int main()&#123; nonaddressable na; nonaddressable * naptr = &amp;na; // Compiler error here.&#125; 방법 const, volatile 한정자를 고려하여, 연산자를 오버로딩 할 수 없는 타입으로 변환 (reinterpret_cast) 상수성을 제거 (const_cast) 다시 원래 타입으로 형 변환 (reinterpret_cast) 1234567891011template &lt;class T&gt;T * addressof(T &amp; v)&#123; return reinterpret_cast&lt;T *&gt;(&amp; const_cast&lt;char&amp;&gt; (reinterpret_cast&lt;const volatile char &amp;&gt;(v)));&#125;int main()&#123; nonaddressable na; nonaddressable * naptr = addressof(na); // No more compiler error.&#125; 참고 c++ 11 에서는 std::addressof 가 있음. Address Of","categories":[],"tags":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/tags/c/"},{"name":"More C++ Idioms","slug":"More-C-Idioms","permalink":"http://yoursite.com/tags/More-C-Idioms/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-01-23T16:11:46.000Z","updated":"2017-01-23T16:11:46.000Z","comments":true,"path":"2017/01/24/hello-world/","link":"","permalink":"http://yoursite.com/2017/01/24/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}